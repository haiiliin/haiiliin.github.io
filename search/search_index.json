{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Resume","text":"<p>Wang, Hailin (\u6c6a\u6d77\u6797), Tongji University / The Hong Kong Polytechnic University</p> <p>This is the personal website of Hailin Wang. I am a Ph.D. student in the Department of Geotechnical Engineering at Tongji University, Shanghai, China and Department of Civil and Environmental Engineering at The Hong Kong Polytechnic University, Hong Kong.</p>"},{"location":"#education","title":"Education","text":"<ul> <li> <p>The Hong Kong Polytechnic University |  Hong Kong, China   September 2021 \u2013 Present </p> </li> <li> <p>Tongji University |  Shanghai, China   September 2020 \u2013 Present </p> </li> <li> <p>Huazhong University of Science and Technology |  Wuhan, China   September 2016 \u2013 June 2020 </p> </li> <li> <p>Fengjie Middle School of Chongqing |  Fengjie, Chongqing, China   September 2013 \u2013 June 2016 </p> </li> </ul>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/debug-abaqus-subroutines/","title":"Debug Abaqus Subroutines","text":"","tags":["FEM","Abaqus","Subroutine","Debugging"]},{"location":"blog/debug-abaqus-subroutines/#enable-debugging-feature-in-abaqus","title":"Enable debugging feature in Abaqus","text":"<p>Go the the Abaqus configuration file <code>abaqus_v6.env</code> or <code>win86_64.env</code> in the Abaqus path, for me, it locates in the following path:</p> <pre><code>C:\\SIMULIA\\EstProducts\\2021\\win_b64\\SMA\\site\n</code></pre> <p>The file is like this:</p> <pre><code>#-*- mode: python -*-\n\n#############################################################################\n#                                                                           #\n#     Compile and Link commands for ABAQUS on the Windows 64 Platform       #\n#                                                                           #\n#############################################################################\n\n# import os # &lt;-- Debugging\n# os.environ['GLOBAL_ENABLE_FPE'] = 'TRUE' # &lt;-- Debugging\n\n# Location of the /include directory in the ABAQUS installation\nabaHomeInc = os.path.abspath(os.path.join(os.environ.get('ABA_HOME', ''), os.pardir))\n\ncompile_cpp=['cl', '/c', '/W0', '/MD', '/TP',\n             '/EHsc', '/DNDEBUG', '/DWIN32', '/DTP_IP', '/D_CONSOLE',\n             '/DNTI', '/DFLT_LIC', '/DOL_DOC', '/D__LIB__', '/DHKS_NT',\n             '/D_WINDOWS_SOURCE', '/DFAR=', '/D_WINDOWS', '/DABQ_WIN86_64', '%P',\n             # '/O1', # &lt;-- Optimization\n             # '/Zi', # &lt;-- Debug symbols\n             '/I%I', '/I'+abaHomeInc]\n\ncompile_fmu=['win64CmpWrp', '-m64', '-msvc9', 'cl', '/LD',\n             '/D_WINDOWS', '/TC', '/W0',  '/I%I', '/I'+abaHomeInc]\n\n## Fortran compile command for User Subroutines\n\ncompile_fortran=['ifort',\n                 '/c', '/fpp', '/extend-source',\n                 '/DABQ_WIN86_64',  '/DABQ_FORTRAN',\n                 '/iface:cref', '/recursive',\n                 '/Qauto',  # &lt;-- important for thread-safety of parallel user subroutines\n                 '/align:array64byte',\n                 '/Qpc64',                    # set FPU precision to 53 bit significand\n                 '/Qprec-div', '/Qprec-sqrt', # improve precision of FP divides and sqrt\n                 '/Qfma-',                    # disable floating point fused multiply-add\n                 '/fp:precise',               # floating point model: precise\n                 '/Qimf-arch-consistency:true', # math library consistent results\n                 '/Qfp-speculation:safe',     # floating point speculations only when safe\n                 '/Qprotect-parens',          # honor parenthesis during expression evaluation\n                 '/Qfp-stack-check',          # enable stack overflow protection checks\n                 '/reentrancy:threaded',      # important for thread-safety\n                 #'/Qinit=zero','/Qinit=arrays',  # automatically initialize all arrays to zero\n                 #'/Qinit=snan', '/Qinit=arrays', # automatically initialize all arrays to SNAN\n                 '/QxSSE3', '/QaxAVX',        # generate SSE3, SSE2, and SSE instructions\n                 # '/Od', '/Ob0',  # &lt;-- Disable Optimization for Debugging\n                 # '/Zi',          # &lt;-- Debugging Information\n                 '/include:%I', '/include:'+abaHomeInc, '%P']\n\nlink_sl=['LINK',\n         '/nologo', '/NOENTRY', '/INCREMENTAL:NO', '/subsystem:console', '/machine:AMD64',\n         '/NODEFAULTLIB:LIBC.LIB', '/NODEFAULTLIB:LIBCMT.LIB',\n         '/DEFAULTLIB:OLDNAMES.LIB', '/DEFAULTLIB:LIBIFCOREMD.LIB', '/DEFAULTLIB:LIBIFPORTMD.LIB', '/DEFAULTLIB:LIBMMD.LIB',\n         '/DEFAULTLIB:kernel32.lib', '/DEFAULTLIB:user32.lib', '/DEFAULTLIB:advapi32.lib',\n         '/FIXED:NO', '/dll',\n         # '/debug', # &lt;-- Debugging\n         '/def:%E', '/out:%U', '%F', '%A', '%L', '%B',\n         'oldnames.lib', 'user32.lib', 'ws2_32.lib', 'netapi32.lib',\n         'advapi32.lib', 'msvcrt.lib', 'vcruntime.lib', 'ucrt.lib']\n\nlink_exe=['LINK',\n          '/nologo', '/INCREMENTAL:NO', '/subsystem:console', '/machine:AMD64', '/STACK:20000000',\n          '/NODEFAULTLIB:LIBC.LIB', '/NODEFAULTLIB:LIBCMT.LIB', '/DEFAULTLIB:OLDNAMES.LIB', '/DEFAULTLIB:LIBIFCOREMD.LIB',\n          '/DEFAULTLIB:LIBIFPORTMD.LIB', '/DEFAULTLIB:LIBMMD.LIB', '/DEFAULTLIB:kernel32.lib',\n          '/DEFAULTLIB:user32.lib', '/DEFAULTLIB:advapi32.lib',\n          '/FIXED:NO', '/LARGEADDRESSAWARE',\n          # '/debug', # &lt;-- Debugging\n          '/out:%J', '%F', '%M', '%L', '%B', '%O',\n          'oldnames.lib', 'user32.lib', 'ws2_32.lib', 'netapi32.lib',\n          'advapi32.lib', 'msvcrt.lib', 'vcruntime.lib', 'ucrt.lib']\n\n## Link command to be used for ABAQUS/MAKE on machines without the Fortran compiler.\n## Uncomment it to enable.\n#\n#link_exe=['LINK', '/nologo', '/INCREMENTAL:NO', '/subsystem:console', '/machine:AMD64', '/NODEFAULTLIB:LIBC.LIB', '/NODEFAULTLIB:LIBCMT.LIB',\n#          '/DEFAULTLIB:OLDNAMES.LIB', '/DEFAULTLIB:MSVCRT.LIB', '/DEFAULTLIB:kernel32.lib', '/DEFAULTLIB:user32.lib', '/DEFAULTLIB:advapi32.lib',\n#          '/FIXED:NO', '/LARGEADDRESSAWARE', '/out:%J', '%F', '%M', '%L', '%B', '%O',\n#         'oldnames.lib', 'user32.lib', 'ws2_32.lib', 'netapi32.lib',\n#         'advapi32.lib', 'msvcrt.lib', 'vcruntime.lib', 'ucrt.lib']\n\n# Remove the temporary names from the namespace\ndel abaHomeInc\n</code></pre> <p>Uncomment all the lines that end with comment of Debugging.</p>","tags":["FEM","Abaqus","Subroutine","Debugging"]},{"location":"blog/debug-abaqus-subroutines/#insert-some-extra-codes-to-pause-in-your-subroutine-when-running-abaqus","title":"Insert some extra codes to pause in your subroutine when running Abaqus","text":"<p>Add some codes like this to pause at the subroutine after the declaration of variables, like this:</p> <pre><code>!-------------------------- FOR DEBUGGING ------------------------------------\nLOGICAL :: FIRSTRUN = .TRUE.\nINTEGER TEMPVAR\nIF (FIRSTRUN == .TRUE.) THEN\n    WRITE(*, *) 'PLEASE INPUT A VALUE:'\n    READ(*, *) TEMPVAR\n    FIRSTRUN = .FALSE.\nEND IF\nTEMPVAR = 1234\n</code></pre>","tags":["FEM","Abaqus","Subroutine","Debugging"]},{"location":"blog/debug-abaqus-subroutines/#run-abaqus-command-to-submit-the-job","title":"Run Abaqus command to submit the job","text":"<p>Use the Abaqus command to submit the job, like this</p> <pre><code>abaqus job=Job-1 user=FRIC_coulomb int\n</code></pre> <p>If you have added some code to pause in the subroutine, the program will stop in the command window, like this</p> <pre><code>10/30/2021 11:51:14 PM\nBegin Analysis Input File Processor\n10/30/2021 11:51:14 PM\nRun pre.exe\n10/30/2021 11:51:17 PM\nEnd Analysis Input File Processor\nBegin Abaqus/Standard Analysis\n10/30/2021 11:51:17 PM\nRun standard.exe\nPLEASE INPUT A VALUE:\n</code></pre>","tags":["FEM","Abaqus","Subroutine","Debugging"]},{"location":"blog/debug-abaqus-subroutines/#attach-to-process-in-visual-studio","title":"Attach to process in Visual Studio","text":"<p>Open your subroutine file in Visual Studio, click <code>Debug -&gt; Attach to Process</code>, choose the Abaqus program <code>standard.exe</code> or <code>explicit_dp.exe</code>.</p>","tags":["FEM","Abaqus","Subroutine","Debugging"]},{"location":"blog/debug-abaqus-subroutines/#resume-running-the-subroutine-and-debug-in-visual-studio","title":"Resume running the subroutine and debug in Visual Studio","text":"<p>Add a breakpoint in the subroutine file in Visual Studio, resume running the subroutine in the command window, i.e., input the temporary value, the subroutine will stop in Visual Studio, and now you can debug your subroutine in Visual Studio!</p>","tags":["FEM","Abaqus","Subroutine","Debugging"]},{"location":"blog/debug-abaqus-subroutines/#warning","title":"Warning","text":"<p>Abaqus CAE cannot be opened if the debug mode is activated, change the configuration file to the old version and you can open Abqus CAE again.</p>","tags":["FEM","Abaqus","Subroutine","Debugging"]},{"location":"blog/%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8-chatgpt-academic/","title":"\u914d\u7f6e\u4f7f\u7528 ChatGPT Academic","text":"","tags":["Python"]},{"location":"blog/%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8-chatgpt-academic/#_1","title":"\u79bb\u7ebf\u5b89\u88c5\u5305","text":"<p>\u4f60\u53ef\u4ee5\u5230 GitHub Release \u9875\u9762\u4e0b\u8f7d ChatGPT Academic \u7684\u79bb\u7ebf\u5b89\u88c5\u5305\uff0c\u89e3\u538b\u540e\u5b89\u88c5\u5373\u53ef\u4f7f\u7528\u3002</p>","tags":["Python"]},{"location":"blog/%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8-chatgpt-academic/#python","title":"\u4f7f\u7528 Python \u5b89\u88c5","text":"<p>\u9996\u5148\uff0c\u4f60\u9700\u8981\u5b89\u88c5 Python\uff0c\u53ef\u4ee5\u4ece Python \u5b98\u7f51 \u4e0b\u8f7d Python 3.8 - 3.11 \u5b89\u88c5\u5305\uff08Python 3.12 \u6682\u4e0d\u652f\u6301\uff09\u3002 \u5b89\u88c5\u65f6\u6ce8\u610f\u52fe\u9009 <code>Add Python to PATH</code> \u9009\u9879\u5c06 Python \u5b89\u88c5\u8def\u5f84\u6dfb\u52a0\u5230\u73af\u5883\u53d8\u91cf <code>PATH</code> \u4e2d\u3002 \u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u6253\u5f00\u547d\u4ee4\u884c\u7a97\u53e3 <code>cmd</code>\uff0c\u8f93\u5165 <code>python --version</code>\uff0c\u5982\u679c\u663e\u793a Python \u7248\u672c\u53f7\uff0c\u5219\u8bf4\u660e\u5b89\u88c5\u6210\u529f\u3002\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u5b89\u88c5 <code>chatgpt-academic</code>\uff1a</p> <pre><code>python -m pip install chatgpt-academic\n</code></pre>","tags":["Python"]},{"location":"blog/%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8-chatgpt-academic/#_2","title":"\u914d\u7f6e\u73af\u5883\u53d8\u91cf","text":"<p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u914d\u7f6e ChatGPT Academic \u9879\u76ee\uff0c\u5177\u4f53\u53ef\u67e5\u9605 gpt-academic \u9879\u76ee\u6587\u6863\u3002 \u4f8b\u5982\uff0c\u914d\u7f6e <code>gpt-3.5-turbo</code> \u7b49 <code>OpenAI</code> \u6a21\u578b\u65f6\uff0c\u8bbe\u7f6e\u540d\u4e3a <code>API_KEY</code> \u7684\u73af\u5883\u53d8\u91cf\uff0c\u503c\u4e3a <code>OpenAI</code> \u7684 API \u5bc6\u94a5\uff0c\u5982\uff1a</p> <pre><code>sk-123456789xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx123456789\n</code></pre> <p>\u82e5\u9700\u4f7f\u7528\u7b2c\u4e09\u65b9\u4ee3\u7406\u670d\u52a1\u63d0\u4f9b\u7684 <code>OpenAI</code> \u6a21\u578b\uff0c\u8fd8\u9700\u914d\u7f6e <code>API_URL_REDIRECT</code> \u73af\u5883\u53d8\u91cf\uff0c\u5982\uff1a</p> <pre><code>{\"https://api.openai.com/v1/chat/completions\": \"https://reverse-proxy-url/v1/chat/completions\"}\n</code></pre> <p>\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u5728\u547d\u4ee4\u884c\u7a97\u53e3\u8f93\u5165 <code>chatgpt-academic</code> \u6216 <code>gpta</code> \u547d\u4ee4\uff0c\u5373\u53ef\u542f\u52a8 ChatGPT Academic \u9879\u76ee\u3002 <code>chatgpt-academic.exe</code> \u548c <code>gpta.exe</code> \u53ef\u6267\u884c\u6587\u4ef6\u4f4d\u4e8e Python \u5b89\u88c5\u76ee\u5f55\u4e0b\u7684 <code>Scripts</code> \u6587\u4ef6\u5939\u4e2d\uff0c\u5982\uff1a</p> <pre><code>C:\\Users\\{username}\\AppData\\Local\\Programs\\Python\\Python311\\Scripts\n</code></pre> <p><code>{username}</code> \u4e3a\u5f53\u524d\u7528\u6237\u540d\uff0c<code>Python311</code> \u4e3a Python \u7248\u672c\u53f7\u3002\u4f60\u53ef\u4ee5\u4e3a <code>chatgpt-academic</code> \u6216 <code>gpta</code> \u547d\u4ee4\u521b\u5efa\u5feb\u6377\u65b9\u5f0f\uff0c\u65b9\u4fbf\u542f\u52a8\u9879\u76ee\u3002</p>","tags":["Python"]},{"location":"blog/matplotlib-widget-for-pyqt/","title":"Matplotlib Widget for PyQt","text":"<p>The following snippet is a <code>MplWidget</code> class that can be used in PyQt or PySide applications. It is a <code>QWidget</code> that contains a <code>matplotlib</code> figure and a toolbar.</p> <pre><code>import matplotlib.pyplot as plt\nfrom matplotlib.backends.backend_qtagg import FigureCanvasQTAgg as FigureCanvas\nfrom matplotlib.backends.backend_qtagg import NavigationToolbar2QT as NavigationToolbar\nfrom matplotlib.figure import Figure\nfrom qtpy import QtWidgets\n\nclass MplWidget(QtWidgets.QWidget):\n    \"\"\"A PyQt/Pyside widget that contains a matplotlib figure\"\"\"\n\n    #: Matplotlib figure\n    figure: Figure\n    #: Figure canvas\n    canvas: FigureCanvas\n\n    def __init__(self, figure: Figure = None, toolbar: bool = True, parent=None, *args, **kwargs):\n        \"\"\"Create a new Matplotlib widget\n\n        Parameters\n        ----------\n        figure : matplotlib.figure.Figure, optional\n            Figure to use, by default None\n        toolbar : bool, optional\n            Whether to show the toolbar, by default True\n        parent : QtWidgets.QWidget, optional\n            Parent widget, by default None\n        args, kwargs\n            Additional arguments passed to the QWidget constructor\n        \"\"\"\n        super().__init__(parent, *args, **kwargs)\n\n        # Figure elements\n        self.figure = figure or plt.figure()\n        self.canvas = FigureCanvas(self.figure)\n        self.canvas.setParent(self)\n        self.toolbar = NavigationToolbar(self.canvas, self) if toolbar else None\n\n        # Layout\n        self.layout = QtWidgets.QVBoxLayout(self)\n        self.layout.setContentsMargins(0, 0, 0, 0)\n        self.layout.addWidget(self.toolbar)\n        self.layout.addWidget(self.canvas)\n\n    def draw(self):\n        \"\"\"Redraw the figure\"\"\"\n        self.canvas.draw()\n</code></pre>","tags":["Python","Qt","Matplotlib"]},{"location":"blog/freezing-installed-python-packages/","title":"Freezing Installed Python Packages","text":"<p>Use the <code>pip freeze</code> command to generate a list of installed packages and their versions and save it to the <code>requirements.txt</code> file.</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>The <code>requirements.txt</code> file can be used to install the same packages and versions on another machine.</p> <pre><code>pip install -r requirements.txt\n</code></pre>","tags":["Python","Pip"]},{"location":"blog/frequently-used-softwares/","title":"Frequently Used Softwares","text":"<p>Some frequently used softwares for my daily work.</p>","tags":["Drawing","IDE","Programming Language","Version Control"]},{"location":"blog/frequently-used-softwares/#drawing","title":"Drawing","text":"<ul> <li>GeoGebra - the world\u2019s favorite, free math tools used by over 100 million students and teachers</li> <li>Draw Freely - Inkscape</li> <li>OriginLab - Origin and OriginPro - Data Analysis and Graphing Software</li> </ul>","tags":["Drawing","IDE","Programming Language","Version Control"]},{"location":"blog/frequently-used-softwares/#ides-and-code-editors","title":"IDEs and Code Editors","text":"<ul> <li>marktext/marktext: \ud83d\udcddA simple and elegant markdown editor, available for Linux, macOS and Windows. (github.com)</li> <li>Notable - The Markdown-based note-taking app that doesn't suck</li> <li>Notepad++ (notepad-plus-plus.org)</li> <li>PyCharm: the Python IDE for Professional Developers by JetBrains</li> <li>Sublime Text - Text Editing, Done Right</li> <li>Typora - a markdown editor, markdown reader.</li> <li>Visual Studio: IDE and Code Editor for Software Developers and Teams (microsoft.com)</li> <li>Visual Studio Code - Code Editing. Redefined</li> </ul>","tags":["Drawing","IDE","Programming Language","Version Control"]},{"location":"blog/frequently-used-softwares/#programming-language-and-frameworks","title":"Programming Language and Frameworks","text":"<ul> <li>MATLAB - MathWorks</li> <li>MinGW - Minimalist GNU for Windows download</li> <li>Welcome to Python.org</li> <li>Qt - Cross-platform Software Design and Development Tools</li> <li>TeX Live - TeX Users Group (tug.org)</li> <li>\u6e05\u534e\u5927\u5b66\u5f00\u6e90\u8f6f\u4ef6\u955c\u50cf\u7ad9 - Tsinghua Open Source Mirror</li> </ul>","tags":["Drawing","IDE","Programming Language","Version Control"]},{"location":"blog/frequently-used-softwares/#version-control","title":"Version Control","text":"<ul> <li>GitHub Desktop - Simple collaboration from your desktop</li> <li>Git (git-scm.com)</li> </ul>","tags":["Drawing","IDE","Programming Language","Version Control"]},{"location":"blog/archive/2023/","title":"October 2023","text":""},{"location":"blog/category/academic/","title":"Academic","text":""},{"location":"blog/tags/","title":"Tags","text":""},{"location":"blog/tags/#abaqus","title":"Abaqus","text":"<ul> <li>Debug Abaqus Subroutines</li> </ul>"},{"location":"blog/tags/#debugging","title":"Debugging","text":"<ul> <li>Debug Abaqus Subroutines</li> </ul>"},{"location":"blog/tags/#drawing","title":"Drawing","text":"<ul> <li>Frequently Used Softwares</li> </ul>"},{"location":"blog/tags/#fem","title":"FEM","text":"<ul> <li>Debug Abaqus Subroutines</li> </ul>"},{"location":"blog/tags/#ide","title":"IDE","text":"<ul> <li>Frequently Used Softwares</li> </ul>"},{"location":"blog/tags/#matplotlib","title":"Matplotlib","text":"<ul> <li>Matplotlib Widget for PyQt</li> </ul>"},{"location":"blog/tags/#pip","title":"Pip","text":"<ul> <li>Freezing Installed Python Packages</li> </ul>"},{"location":"blog/tags/#programming-language","title":"Programming Language","text":"<ul> <li>Frequently Used Softwares</li> </ul>"},{"location":"blog/tags/#python","title":"Python","text":"<ul> <li>\u914d\u7f6e\u4f7f\u7528 ChatGPT Academic</li> <li>Matplotlib Widget for PyQt</li> <li>Freezing Installed Python Packages</li> </ul>"},{"location":"blog/tags/#qt","title":"Qt","text":"<ul> <li>Matplotlib Widget for PyQt</li> </ul>"},{"location":"blog/tags/#subroutine","title":"Subroutine","text":"<ul> <li>Debug Abaqus Subroutines</li> </ul>"},{"location":"blog/tags/#version-control","title":"Version Control","text":"<ul> <li>Frequently Used Softwares</li> </ul>"}]}